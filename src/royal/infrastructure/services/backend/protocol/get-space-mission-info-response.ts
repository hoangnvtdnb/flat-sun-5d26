// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { SpaceMissionInfo } from '../../../../../royal/infrastructure/services/backend/protocol/space-mission-info.js';


export class GetSpaceMissionInfoResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetSpaceMissionInfoResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetSpaceMissionInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetSpaceMissionInfoResponse):GetSpaceMissionInfoResponse {
  return (obj || new GetSpaceMissionInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetSpaceMissionInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetSpaceMissionInfoResponse):GetSpaceMissionInfoResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetSpaceMissionInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

spaceMissionInfo(obj?:SpaceMissionInfo):SpaceMissionInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new SpaceMissionInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startGetSpaceMissionInfoResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addSpaceMissionInfo(builder:flatbuffers.Builder, spaceMissionInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, spaceMissionInfoOffset, 0);
}

static endGetSpaceMissionInfoResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetSpaceMissionInfoResponse(builder:flatbuffers.Builder, spaceMissionInfoOffset:flatbuffers.Offset):flatbuffers.Offset {
  GetSpaceMissionInfoResponse.startGetSpaceMissionInfoResponse(builder);
  GetSpaceMissionInfoResponse.addSpaceMissionInfo(builder, spaceMissionInfoOffset);
  return GetSpaceMissionInfoResponse.endGetSpaceMissionInfoResponse(builder);
}
}
