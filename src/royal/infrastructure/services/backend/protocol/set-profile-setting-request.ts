// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ProfileSetting } from '../../../../../royal/infrastructure/services/backend/protocol/profile-setting.js';


export class SetProfileSettingRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SetProfileSettingRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSetProfileSettingRequest(bb:flatbuffers.ByteBuffer, obj?:SetProfileSettingRequest):SetProfileSettingRequest {
  return (obj || new SetProfileSettingRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSetProfileSettingRequest(bb:flatbuffers.ByteBuffer, obj?:SetProfileSettingRequest):SetProfileSettingRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SetProfileSettingRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

profileSetting(obj?:ProfileSetting):ProfileSetting|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ProfileSetting()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

teamId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

username():string|null
username(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
username(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startSetProfileSettingRequest(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addProfileSetting(builder:flatbuffers.Builder, profileSettingOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, profileSettingOffset, 0);
}

static addTeamId(builder:flatbuffers.Builder, teamId:bigint) {
  builder.addFieldInt64(1, teamId, BigInt('0'));
}

static addUsername(builder:flatbuffers.Builder, usernameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, usernameOffset, 0);
}

static endSetProfileSettingRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSetProfileSettingRequest(builder:flatbuffers.Builder, profileSettingOffset:flatbuffers.Offset, teamId:bigint, usernameOffset:flatbuffers.Offset):flatbuffers.Offset {
  SetProfileSettingRequest.startSetProfileSettingRequest(builder);
  SetProfileSettingRequest.addProfileSetting(builder, profileSettingOffset);
  SetProfileSettingRequest.addTeamId(builder, teamId);
  SetProfileSettingRequest.addUsername(builder, usernameOffset);
  return SetProfileSettingRequest.endSetProfileSettingRequest(builder);
}
}
