// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class EchoResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EchoResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsEchoResponse(bb:flatbuffers.ByteBuffer, obj?:EchoResponse):EchoResponse {
  return (obj || new EchoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsEchoResponse(bb:flatbuffers.ByteBuffer, obj?:EchoResponse):EchoResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new EchoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startEchoResponse(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endEchoResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createEchoResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  EchoResponse.startEchoResponse(builder);
  return EchoResponse.endEchoResponse(builder);
}
}
