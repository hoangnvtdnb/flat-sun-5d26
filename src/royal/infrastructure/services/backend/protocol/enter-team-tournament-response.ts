// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ResponseStatusCode } from '../../../../../royal/infrastructure/services/backend/protocol/response-status-code.js';
import { TeamTournamentFailReason } from '../../../../../royal/infrastructure/services/backend/protocol/team-tournament-fail-reason.js';
import { TeamTournamentGroupInfo } from '../../../../../royal/infrastructure/services/backend/protocol/team-tournament-group-info.js';


export class EnterTeamTournamentResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EnterTeamTournamentResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsEnterTeamTournamentResponse(bb:flatbuffers.ByteBuffer, obj?:EnterTeamTournamentResponse):EnterTeamTournamentResponse {
  return (obj || new EnterTeamTournamentResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsEnterTeamTournamentResponse(bb:flatbuffers.ByteBuffer, obj?:EnterTeamTournamentResponse):EnterTeamTournamentResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new EnterTeamTournamentResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

status():ResponseStatusCode {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ResponseStatusCode.Success;
}

failReason():TeamTournamentFailReason {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : TeamTournamentFailReason.None;
}

teamTournamentGroupInfo(obj?:TeamTournamentGroupInfo):TeamTournamentGroupInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new TeamTournamentGroupInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

usersHash():string|null
usersHash(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
usersHash(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

segment():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startEnterTeamTournamentResponse(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addStatus(builder:flatbuffers.Builder, status:ResponseStatusCode) {
  builder.addFieldInt8(0, status, ResponseStatusCode.Success);
}

static addFailReason(builder:flatbuffers.Builder, failReason:TeamTournamentFailReason) {
  builder.addFieldInt8(1, failReason, TeamTournamentFailReason.None);
}

static addTeamTournamentGroupInfo(builder:flatbuffers.Builder, teamTournamentGroupInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, teamTournamentGroupInfoOffset, 0);
}

static addUsersHash(builder:flatbuffers.Builder, usersHashOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, usersHashOffset, 0);
}

static addSegment(builder:flatbuffers.Builder, segment:number) {
  builder.addFieldInt32(4, segment, 0);
}

static endEnterTeamTournamentResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
