// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { DailyLightningRushUser } from '../../../../../royal/infrastructure/services/backend/protocol/daily-lightning-rush-user.js';


export class DailyLightningRushGroupInfo {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DailyLightningRushGroupInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDailyLightningRushGroupInfo(bb:flatbuffers.ByteBuffer, obj?:DailyLightningRushGroupInfo):DailyLightningRushGroupInfo {
  return (obj || new DailyLightningRushGroupInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDailyLightningRushGroupInfo(bb:flatbuffers.ByteBuffer, obj?:DailyLightningRushGroupInfo):DailyLightningRushGroupInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DailyLightningRushGroupInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

groupId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

users(index: number, obj?:DailyLightningRushUser):DailyLightningRushUser|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new DailyLightningRushUser()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

usersLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

groupRemainingTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startDailyLightningRushGroupInfo(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addGroupId(builder:flatbuffers.Builder, groupId:bigint) {
  builder.addFieldInt64(0, groupId, BigInt('0'));
}

static addUsers(builder:flatbuffers.Builder, usersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, usersOffset, 0);
}

static createUsersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startUsersVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addGroupRemainingTime(builder:flatbuffers.Builder, groupRemainingTime:bigint) {
  builder.addFieldInt64(2, groupRemainingTime, BigInt('0'));
}

static endDailyLightningRushGroupInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDailyLightningRushGroupInfo(builder:flatbuffers.Builder, groupId:bigint, usersOffset:flatbuffers.Offset, groupRemainingTime:bigint):flatbuffers.Offset {
  DailyLightningRushGroupInfo.startDailyLightningRushGroupInfo(builder);
  DailyLightningRushGroupInfo.addGroupId(builder, groupId);
  DailyLightningRushGroupInfo.addUsers(builder, usersOffset);
  DailyLightningRushGroupInfo.addGroupRemainingTime(builder, groupRemainingTime);
  return DailyLightningRushGroupInfo.endDailyLightningRushGroupInfo(builder);
}
}
