// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class DeprecatedAuthenticateRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DeprecatedAuthenticateRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDeprecatedAuthenticateRequest(bb:flatbuffers.ByteBuffer, obj?:DeprecatedAuthenticateRequest):DeprecatedAuthenticateRequest {
  return (obj || new DeprecatedAuthenticateRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDeprecatedAuthenticateRequest(bb:flatbuffers.ByteBuffer, obj?:DeprecatedAuthenticateRequest):DeprecatedAuthenticateRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DeprecatedAuthenticateRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

userId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

token():string|null
token(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
token(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

deviceId():string|null
deviceId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
deviceId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

version():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startDeprecatedAuthenticateRequest(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addUserId(builder:flatbuffers.Builder, userId:bigint) {
  builder.addFieldInt64(0, userId, BigInt('0'));
}

static addToken(builder:flatbuffers.Builder, tokenOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, tokenOffset, 0);
}

static addDeviceId(builder:flatbuffers.Builder, deviceIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, deviceIdOffset, 0);
}

static addVersion(builder:flatbuffers.Builder, version:number) {
  builder.addFieldInt32(3, version, 0);
}

static endDeprecatedAuthenticateRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDeprecatedAuthenticateRequest(builder:flatbuffers.Builder, userId:bigint, tokenOffset:flatbuffers.Offset, deviceIdOffset:flatbuffers.Offset, version:number):flatbuffers.Offset {
  DeprecatedAuthenticateRequest.startDeprecatedAuthenticateRequest(builder);
  DeprecatedAuthenticateRequest.addUserId(builder, userId);
  DeprecatedAuthenticateRequest.addToken(builder, tokenOffset);
  DeprecatedAuthenticateRequest.addDeviceId(builder, deviceIdOffset);
  DeprecatedAuthenticateRequest.addVersion(builder, version);
  return DeprecatedAuthenticateRequest.endDeprecatedAuthenticateRequest(builder);
}
}
