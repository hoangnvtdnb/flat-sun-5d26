// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { LeaderboardInfoType } from '../../../../../royal/infrastructure/services/backend/protocol/leaderboard-info-type.js';


export class GetDailyLightningRushInfoRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetDailyLightningRushInfoRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetDailyLightningRushInfoRequest(bb:flatbuffers.ByteBuffer, obj?:GetDailyLightningRushInfoRequest):GetDailyLightningRushInfoRequest {
  return (obj || new GetDailyLightningRushInfoRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetDailyLightningRushInfoRequest(bb:flatbuffers.ByteBuffer, obj?:GetDailyLightningRushInfoRequest):GetDailyLightningRushInfoRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetDailyLightningRushInfoRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

eventId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

groupId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

configVersion():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

leaderboardInfoType():LeaderboardInfoType {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : LeaderboardInfoType.None;
}

static startGetDailyLightningRushInfoRequest(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addEventId(builder:flatbuffers.Builder, eventId:number) {
  builder.addFieldInt32(0, eventId, 0);
}

static addGroupId(builder:flatbuffers.Builder, groupId:bigint) {
  builder.addFieldInt64(1, groupId, BigInt('0'));
}

static addConfigVersion(builder:flatbuffers.Builder, configVersion:number) {
  builder.addFieldInt32(2, configVersion, 0);
}

static addLeaderboardInfoType(builder:flatbuffers.Builder, leaderboardInfoType:LeaderboardInfoType) {
  builder.addFieldInt8(3, leaderboardInfoType, LeaderboardInfoType.None);
}

static endGetDailyLightningRushInfoRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetDailyLightningRushInfoRequest(builder:flatbuffers.Builder, eventId:number, groupId:bigint, configVersion:number, leaderboardInfoType:LeaderboardInfoType):flatbuffers.Offset {
  GetDailyLightningRushInfoRequest.startGetDailyLightningRushInfoRequest(builder);
  GetDailyLightningRushInfoRequest.addEventId(builder, eventId);
  GetDailyLightningRushInfoRequest.addGroupId(builder, groupId);
  GetDailyLightningRushInfoRequest.addConfigVersion(builder, configVersion);
  GetDailyLightningRushInfoRequest.addLeaderboardInfoType(builder, leaderboardInfoType);
  return GetDailyLightningRushInfoRequest.endGetDailyLightningRushInfoRequest(builder);
}
}
