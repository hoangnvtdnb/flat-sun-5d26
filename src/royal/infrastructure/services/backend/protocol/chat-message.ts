// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ChatMessageType } from '../../../../../royal/infrastructure/services/backend/protocol/chat-message-type.js';
import { ChatProfile } from '../../../../../royal/infrastructure/services/backend/protocol/chat-profile.js';
import { KnightType } from '../../../../../royal/infrastructure/services/backend/protocol/knight-type.js';


export class ChatMessage {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ChatMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsChatMessage(bb:flatbuffers.ByteBuffer, obj?:ChatMessage):ChatMessage {
  return (obj || new ChatMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsChatMessage(bb:flatbuffers.ByteBuffer, obj?:ChatMessage):ChatMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ChatMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

chatMessageType():ChatMessageType {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ChatMessageType.TextMessage;
}

userId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

text():string|null
text(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
text(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

createDate():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

actionOwner():string|null
actionOwner(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
actionOwner(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

isGold():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

hasSpecialNameStyle():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

chatProfile(obj?:ChatProfile):ChatProfile|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new ChatProfile()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

knightType():KnightType {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : KnightType.None;
}

isPremium():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startChatMessage(builder:flatbuffers.Builder) {
  builder.startObject(11);
}

static addChatMessageType(builder:flatbuffers.Builder, chatMessageType:ChatMessageType) {
  builder.addFieldInt8(0, chatMessageType, ChatMessageType.TextMessage);
}

static addUserId(builder:flatbuffers.Builder, userId:bigint) {
  builder.addFieldInt64(1, userId, BigInt('0'));
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, nameOffset, 0);
}

static addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, textOffset, 0);
}

static addCreateDate(builder:flatbuffers.Builder, createDate:bigint) {
  builder.addFieldInt64(4, createDate, BigInt('0'));
}

static addActionOwner(builder:flatbuffers.Builder, actionOwnerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, actionOwnerOffset, 0);
}

static addIsGold(builder:flatbuffers.Builder, isGold:boolean) {
  builder.addFieldInt8(6, +isGold, +false);
}

static addHasSpecialNameStyle(builder:flatbuffers.Builder, hasSpecialNameStyle:boolean) {
  builder.addFieldInt8(7, +hasSpecialNameStyle, +false);
}

static addChatProfile(builder:flatbuffers.Builder, chatProfileOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, chatProfileOffset, 0);
}

static addKnightType(builder:flatbuffers.Builder, knightType:KnightType) {
  builder.addFieldInt8(9, knightType, KnightType.None);
}

static addIsPremium(builder:flatbuffers.Builder, isPremium:boolean) {
  builder.addFieldInt8(10, +isPremium, +false);
}

static endChatMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
