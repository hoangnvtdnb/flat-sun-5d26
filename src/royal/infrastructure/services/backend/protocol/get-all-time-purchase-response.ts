// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ResponseStatusCode } from '../../../../../royal/infrastructure/services/backend/protocol/response-status-code.js';


export class GetAllTimePurchaseResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetAllTimePurchaseResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetAllTimePurchaseResponse(bb:flatbuffers.ByteBuffer, obj?:GetAllTimePurchaseResponse):GetAllTimePurchaseResponse {
  return (obj || new GetAllTimePurchaseResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetAllTimePurchaseResponse(bb:flatbuffers.ByteBuffer, obj?:GetAllTimePurchaseResponse):GetAllTimePurchaseResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetAllTimePurchaseResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

purchaseAmount():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

lastPurchaseTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

statusCode():ResponseStatusCode {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ResponseStatusCode.Success;
}

static startGetAllTimePurchaseResponse(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addPurchaseAmount(builder:flatbuffers.Builder, purchaseAmount:number) {
  builder.addFieldInt32(0, purchaseAmount, 0);
}

static addLastPurchaseTime(builder:flatbuffers.Builder, lastPurchaseTime:bigint) {
  builder.addFieldInt64(1, lastPurchaseTime, BigInt('0'));
}

static addStatusCode(builder:flatbuffers.Builder, statusCode:ResponseStatusCode) {
  builder.addFieldInt8(2, statusCode, ResponseStatusCode.Success);
}

static endGetAllTimePurchaseResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetAllTimePurchaseResponse(builder:flatbuffers.Builder, purchaseAmount:number, lastPurchaseTime:bigint, statusCode:ResponseStatusCode):flatbuffers.Offset {
  GetAllTimePurchaseResponse.startGetAllTimePurchaseResponse(builder);
  GetAllTimePurchaseResponse.addPurchaseAmount(builder, purchaseAmount);
  GetAllTimePurchaseResponse.addLastPurchaseTime(builder, lastPurchaseTime);
  GetAllTimePurchaseResponse.addStatusCode(builder, statusCode);
  return GetAllTimePurchaseResponse.endGetAllTimePurchaseResponse(builder);
}
}
