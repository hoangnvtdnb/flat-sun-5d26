// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { JoinTeamFailReason } from '../../../../../royal/infrastructure/services/backend/protocol/join-team-fail-reason.js';
import { ResponseStatusCode } from '../../../../../royal/infrastructure/services/backend/protocol/response-status-code.js';
import { TeamBattleInfo } from '../../../../../royal/infrastructure/services/backend/protocol/team-battle-info.js';
import { TeamTournamentRefreshInfo } from '../../../../../royal/infrastructure/services/backend/protocol/team-tournament-refresh-info.js';
import { TeamTreasureInfo } from '../../../../../royal/infrastructure/services/backend/protocol/team-treasure-info.js';


export class JoinTeamResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):JoinTeamResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsJoinTeamResponse(bb:flatbuffers.ByteBuffer, obj?:JoinTeamResponse):JoinTeamResponse {
  return (obj || new JoinTeamResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsJoinTeamResponse(bb:flatbuffers.ByteBuffer, obj?:JoinTeamResponse):JoinTeamResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new JoinTeamResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

status():ResponseStatusCode {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ResponseStatusCode.Success;
}

requestSent():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

failReason():JoinTeamFailReason {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : JoinTeamFailReason.None;
}

userData():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

teamBattleInfo(obj?:TeamBattleInfo):TeamBattleInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new TeamBattleInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

teamTreasureInfo(obj?:TeamTreasureInfo):TeamTreasureInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new TeamTreasureInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

teamTournamentInfo(obj?:TeamTournamentRefreshInfo):TeamTournamentRefreshInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new TeamTournamentRefreshInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

deprecatedTeamJoinBanDuration():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startJoinTeamResponse(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addStatus(builder:flatbuffers.Builder, status:ResponseStatusCode) {
  builder.addFieldInt8(0, status, ResponseStatusCode.Success);
}

static addRequestSent(builder:flatbuffers.Builder, requestSent:boolean) {
  builder.addFieldInt8(1, +requestSent, +false);
}

static addFailReason(builder:flatbuffers.Builder, failReason:JoinTeamFailReason) {
  builder.addFieldInt8(2, failReason, JoinTeamFailReason.None);
}

static addUserData(builder:flatbuffers.Builder, userData:bigint) {
  builder.addFieldInt64(3, userData, BigInt('0'));
}

static addTeamBattleInfo(builder:flatbuffers.Builder, teamBattleInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, teamBattleInfoOffset, 0);
}

static addTeamTreasureInfo(builder:flatbuffers.Builder, teamTreasureInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, teamTreasureInfoOffset, 0);
}

static addTeamTournamentInfo(builder:flatbuffers.Builder, teamTournamentInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, teamTournamentInfoOffset, 0);
}

static addDeprecatedTeamJoinBanDuration(builder:flatbuffers.Builder, deprecatedTeamJoinBanDuration:bigint) {
  builder.addFieldInt64(7, deprecatedTeamJoinBanDuration, BigInt('0'));
}

static endJoinTeamResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
