// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class CreateTeamRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CreateTeamRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCreateTeamRequest(bb:flatbuffers.ByteBuffer, obj?:CreateTeamRequest):CreateTeamRequest {
  return (obj || new CreateTeamRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCreateTeamRequest(bb:flatbuffers.ByteBuffer, obj?:CreateTeamRequest):CreateTeamRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CreateTeamRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

teamId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

nickName():string|null
nickName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
nickName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamName():string|null
teamName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

logo():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

minLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

type():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

language():string|null
language(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
language(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

deviceLanguage():string|null
deviceLanguage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
deviceLanguage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

minCrown():number {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startCreateTeamRequest(builder:flatbuffers.Builder) {
  builder.startObject(10);
}

static addTeamId(builder:flatbuffers.Builder, teamId:bigint) {
  builder.addFieldInt64(0, teamId, BigInt('0'));
}

static addNickName(builder:flatbuffers.Builder, nickNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nickNameOffset, 0);
}

static addTeamName(builder:flatbuffers.Builder, teamNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, teamNameOffset, 0);
}

static addLogo(builder:flatbuffers.Builder, logo:number) {
  builder.addFieldInt32(3, logo, 0);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, descriptionOffset, 0);
}

static addMinLevel(builder:flatbuffers.Builder, minLevel:number) {
  builder.addFieldInt32(5, minLevel, 0);
}

static addType(builder:flatbuffers.Builder, type:boolean) {
  builder.addFieldInt8(6, +type, +false);
}

static addLanguage(builder:flatbuffers.Builder, languageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, languageOffset, 0);
}

static addDeviceLanguage(builder:flatbuffers.Builder, deviceLanguageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, deviceLanguageOffset, 0);
}

static addMinCrown(builder:flatbuffers.Builder, minCrown:number) {
  builder.addFieldInt32(9, minCrown, 0);
}

static endCreateTeamRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCreateTeamRequest(builder:flatbuffers.Builder, teamId:bigint, nickNameOffset:flatbuffers.Offset, teamNameOffset:flatbuffers.Offset, logo:number, descriptionOffset:flatbuffers.Offset, minLevel:number, type:boolean, languageOffset:flatbuffers.Offset, deviceLanguageOffset:flatbuffers.Offset, minCrown:number):flatbuffers.Offset {
  CreateTeamRequest.startCreateTeamRequest(builder);
  CreateTeamRequest.addTeamId(builder, teamId);
  CreateTeamRequest.addNickName(builder, nickNameOffset);
  CreateTeamRequest.addTeamName(builder, teamNameOffset);
  CreateTeamRequest.addLogo(builder, logo);
  CreateTeamRequest.addDescription(builder, descriptionOffset);
  CreateTeamRequest.addMinLevel(builder, minLevel);
  CreateTeamRequest.addType(builder, type);
  CreateTeamRequest.addLanguage(builder, languageOffset);
  CreateTeamRequest.addDeviceLanguage(builder, deviceLanguageOffset);
  CreateTeamRequest.addMinCrown(builder, minCrown);
  return CreateTeamRequest.endCreateTeamRequest(builder);
}
}
