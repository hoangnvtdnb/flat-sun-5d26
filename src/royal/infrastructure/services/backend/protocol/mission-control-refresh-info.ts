// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { MissionControlInfo } from '../../../../../royal/infrastructure/services/backend/protocol/mission-control-info.js';
import { MissionControlUserConfigInfo } from '../../../../../royal/infrastructure/services/backend/protocol/mission-control-user-config-info.js';


export class MissionControlRefreshInfo {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MissionControlRefreshInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMissionControlRefreshInfo(bb:flatbuffers.ByteBuffer, obj?:MissionControlRefreshInfo):MissionControlRefreshInfo {
  return (obj || new MissionControlRefreshInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMissionControlRefreshInfo(bb:flatbuffers.ByteBuffer, obj?:MissionControlRefreshInfo):MissionControlRefreshInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MissionControlRefreshInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

missionControlInfo(obj?:MissionControlInfo):MissionControlInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MissionControlInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

missionControlUserConfigInfo(obj?:MissionControlUserConfigInfo):MissionControlUserConfigInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new MissionControlUserConfigInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startMissionControlRefreshInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addMissionControlInfo(builder:flatbuffers.Builder, missionControlInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, missionControlInfoOffset, 0);
}

static addMissionControlUserConfigInfo(builder:flatbuffers.Builder, missionControlUserConfigInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, missionControlUserConfigInfoOffset, 0);
}

static endMissionControlRefreshInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
