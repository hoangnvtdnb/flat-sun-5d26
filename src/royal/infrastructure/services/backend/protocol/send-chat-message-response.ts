// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ChatMessage } from '../../../../../royal/infrastructure/services/backend/protocol/chat-message.js';
import { ChatMessageFailReason } from '../../../../../royal/infrastructure/services/backend/protocol/chat-message-fail-reason.js';


export class SendChatMessageResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SendChatMessageResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSendChatMessageResponse(bb:flatbuffers.ByteBuffer, obj?:SendChatMessageResponse):SendChatMessageResponse {
  return (obj || new SendChatMessageResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSendChatMessageResponse(bb:flatbuffers.ByteBuffer, obj?:SendChatMessageResponse):SendChatMessageResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SendChatMessageResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

message(obj?:ChatMessage):ChatMessage|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ChatMessage()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

failReason():ChatMessageFailReason {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ChatMessageFailReason.None;
}

teamHoppingBanDuration():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startSendChatMessageResponse(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, messageOffset, 0);
}

static addFailReason(builder:flatbuffers.Builder, failReason:ChatMessageFailReason) {
  builder.addFieldInt8(1, failReason, ChatMessageFailReason.None);
}

static addTeamHoppingBanDuration(builder:flatbuffers.Builder, teamHoppingBanDuration:bigint) {
  builder.addFieldInt64(2, teamHoppingBanDuration, BigInt('0'));
}

static endSendChatMessageResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSendChatMessageResponse(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset, failReason:ChatMessageFailReason, teamHoppingBanDuration:bigint):flatbuffers.Offset {
  SendChatMessageResponse.startSendChatMessageResponse(builder);
  SendChatMessageResponse.addMessage(builder, messageOffset);
  SendChatMessageResponse.addFailReason(builder, failReason);
  SendChatMessageResponse.addTeamHoppingBanDuration(builder, teamHoppingBanDuration);
  return SendChatMessageResponse.endSendChatMessageResponse(builder);
}
}
