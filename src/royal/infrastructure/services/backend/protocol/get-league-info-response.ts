// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { LeagueConfig } from '../../../../../royal/infrastructure/services/backend/protocol/league-config.js';
import { LeagueMember } from '../../../../../royal/infrastructure/services/backend/protocol/league-member.js';
import { ResponseStatusCode } from '../../../../../royal/infrastructure/services/backend/protocol/response-status-code.js';


export class GetLeagueInfoResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetLeagueInfoResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetLeagueInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetLeagueInfoResponse):GetLeagueInfoResponse {
  return (obj || new GetLeagueInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetLeagueInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetLeagueInfoResponse):GetLeagueInfoResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetLeagueInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

status():ResponseStatusCode {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ResponseStatusCode.Success;
}

members(index: number, obj?:LeagueMember):LeagueMember|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new LeagueMember()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
}

membersLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

depreciatedLeagueConfig(obj?:LeagueConfig):LeagueConfig|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new LeagueConfig()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

config(obj?:LeagueConfig):LeagueConfig|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new LeagueConfig()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

remainingTime():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startGetLeagueInfoResponse(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addStatus(builder:flatbuffers.Builder, status:ResponseStatusCode) {
  builder.addFieldInt8(0, status, ResponseStatusCode.Success);
}

static addMembers(builder:flatbuffers.Builder, membersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, membersOffset, 0);
}

static createMembersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startMembersVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addDepreciatedLeagueConfig(builder:flatbuffers.Builder, depreciatedLeagueConfigOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, depreciatedLeagueConfigOffset, 0);
}

static addConfig(builder:flatbuffers.Builder, configOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, configOffset, 0);
}

static addRemainingTime(builder:flatbuffers.Builder, remainingTime:bigint) {
  builder.addFieldInt64(4, remainingTime, BigInt('0'));
}

static endGetLeagueInfoResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
