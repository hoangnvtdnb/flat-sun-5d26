// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { CoopEventFriendStatus } from '../../../../../royal/infrastructure/services/backend/protocol/coop-event-friend-status.js';
import { DragonNestUser } from '../../../../../royal/infrastructure/services/backend/protocol/dragon-nest-user.js';


export class DragonNestFriendInfo {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DragonNestFriendInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDragonNestFriendInfo(bb:flatbuffers.ByteBuffer, obj?:DragonNestFriendInfo):DragonNestFriendInfo {
  return (obj || new DragonNestFriendInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDragonNestFriendInfo(bb:flatbuffers.ByteBuffer, obj?:DragonNestFriendInfo):DragonNestFriendInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DragonNestFriendInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

profileData(obj?:DragonNestUser):DragonNestUser|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DragonNestUser()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

status():CoopEventFriendStatus {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : CoopEventFriendStatus.None;
}

static startDragonNestFriendInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addProfileData(builder:flatbuffers.Builder, profileDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, profileDataOffset, 0);
}

static addStatus(builder:flatbuffers.Builder, status:CoopEventFriendStatus) {
  builder.addFieldInt8(1, status, CoopEventFriendStatus.None);
}

static endDragonNestFriendInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDragonNestFriendInfo(builder:flatbuffers.Builder, profileDataOffset:flatbuffers.Offset, status:CoopEventFriendStatus):flatbuffers.Offset {
  DragonNestFriendInfo.startDragonNestFriendInfo(builder);
  DragonNestFriendInfo.addProfileData(builder, profileDataOffset);
  DragonNestFriendInfo.addStatus(builder, status);
  return DragonNestFriendInfo.endDragonNestFriendInfo(builder);
}
}
