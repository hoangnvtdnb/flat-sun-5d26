// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class TeamInfoAtSearch {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TeamInfoAtSearch {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTeamInfoAtSearch(bb:flatbuffers.ByteBuffer, obj?:TeamInfoAtSearch):TeamInfoAtSearch {
  return (obj || new TeamInfoAtSearch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTeamInfoAtSearch(bb:flatbuffers.ByteBuffer, obj?:TeamInfoAtSearch):TeamInfoAtSearch {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TeamInfoAtSearch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

teamId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

logo():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

memberCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

onlineUserCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startTeamInfoAtSearch(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addTeamId(builder:flatbuffers.Builder, teamId:bigint) {
  builder.addFieldInt64(0, teamId, BigInt('0'));
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
}

static addLogo(builder:flatbuffers.Builder, logo:number) {
  builder.addFieldInt32(2, logo, 0);
}

static addMemberCount(builder:flatbuffers.Builder, memberCount:number) {
  builder.addFieldInt32(3, memberCount, 0);
}

static addOnlineUserCount(builder:flatbuffers.Builder, onlineUserCount:number) {
  builder.addFieldInt32(4, onlineUserCount, 0);
}

static endTeamInfoAtSearch(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createTeamInfoAtSearch(builder:flatbuffers.Builder, teamId:bigint, nameOffset:flatbuffers.Offset, logo:number, memberCount:number, onlineUserCount:number):flatbuffers.Offset {
  TeamInfoAtSearch.startTeamInfoAtSearch(builder);
  TeamInfoAtSearch.addTeamId(builder, teamId);
  TeamInfoAtSearch.addName(builder, nameOffset);
  TeamInfoAtSearch.addLogo(builder, logo);
  TeamInfoAtSearch.addMemberCount(builder, memberCount);
  TeamInfoAtSearch.addOnlineUserCount(builder, onlineUserCount);
  return TeamInfoAtSearch.endTeamInfoAtSearch(builder);
}
}
