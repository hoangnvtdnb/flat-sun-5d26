// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { CoopEventInvitationStatus } from '../../../../../royal/infrastructure/services/backend/protocol/coop-event-invitation-status.js';
import { DragonNestUser } from '../../../../../royal/infrastructure/services/backend/protocol/dragon-nest-user.js';
import { DragonType } from '../../../../../royal/infrastructure/services/backend/protocol/dragon-type.js';


export class DragonNestInvitationUpdate {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DragonNestInvitationUpdate {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDragonNestInvitationUpdate(bb:flatbuffers.ByteBuffer, obj?:DragonNestInvitationUpdate):DragonNestInvitationUpdate {
  return (obj || new DragonNestInvitationUpdate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDragonNestInvitationUpdate(bb:flatbuffers.ByteBuffer, obj?:DragonNestInvitationUpdate):DragonNestInvitationUpdate {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DragonNestInvitationUpdate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

invitationStatus():CoopEventInvitationStatus {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : CoopEventInvitationStatus.Requested;
}

partnerProfileData(obj?:DragonNestUser):DragonNestUser|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new DragonNestUser()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

dragonType():DragonType {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : DragonType.None;
}

dragonIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

static startDragonNestInvitationUpdate(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addInvitationStatus(builder:flatbuffers.Builder, invitationStatus:CoopEventInvitationStatus) {
  builder.addFieldInt8(0, invitationStatus, CoopEventInvitationStatus.Requested);
}

static addPartnerProfileData(builder:flatbuffers.Builder, partnerProfileDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, partnerProfileDataOffset, 0);
}

static addDragonType(builder:flatbuffers.Builder, dragonType:DragonType) {
  builder.addFieldInt8(2, dragonType, DragonType.None);
}

static addDragonIndex(builder:flatbuffers.Builder, dragonIndex:number) {
  builder.addFieldInt8(3, dragonIndex, 0);
}

static endDragonNestInvitationUpdate(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
