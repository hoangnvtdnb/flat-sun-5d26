// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ProfileSetting } from '../../../../../royal/infrastructure/services/backend/protocol/profile-setting.js';
import { WorldCupBadge } from '../../../../../royal/infrastructure/services/backend/protocol/world-cup-badge.js';


export class FriendScore {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FriendScore {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFriendScore(bb:flatbuffers.ByteBuffer, obj?:FriendScore):FriendScore {
  return (obj || new FriendScore()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFriendScore(bb:flatbuffers.ByteBuffer, obj?:FriendScore):FriendScore {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FriendScore()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

facebookId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

level():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

lastLevelUpdateDate():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

crown():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

teamId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

teamName():string|null
teamName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
teamName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

teamLogo():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

userId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

deprecatedIsGold():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

worldCupBadge(obj?:WorldCupBadge):WorldCupBadge|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new WorldCupBadge()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

hasSpecialNameStyle():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

hasSpecialFrameStyle():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

profileSetting(obj?:ProfileSetting):ProfileSetting|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new ProfileSetting()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startFriendScore(builder:flatbuffers.Builder) {
  builder.startObject(14);
}

static addFacebookId(builder:flatbuffers.Builder, facebookId:bigint) {
  builder.addFieldInt64(0, facebookId, BigInt('0'));
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nameOffset, 0);
}

static addLevel(builder:flatbuffers.Builder, level:number) {
  builder.addFieldInt32(2, level, 0);
}

static addLastLevelUpdateDate(builder:flatbuffers.Builder, lastLevelUpdateDate:bigint) {
  builder.addFieldInt64(3, lastLevelUpdateDate, BigInt('0'));
}

static addCrown(builder:flatbuffers.Builder, crown:number) {
  builder.addFieldInt32(4, crown, 0);
}

static addTeamId(builder:flatbuffers.Builder, teamId:bigint) {
  builder.addFieldInt64(5, teamId, BigInt('0'));
}

static addTeamName(builder:flatbuffers.Builder, teamNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, teamNameOffset, 0);
}

static addTeamLogo(builder:flatbuffers.Builder, teamLogo:number) {
  builder.addFieldInt32(7, teamLogo, 0);
}

static addUserId(builder:flatbuffers.Builder, userId:bigint) {
  builder.addFieldInt64(8, userId, BigInt('0'));
}

static addDeprecatedIsGold(builder:flatbuffers.Builder, deprecatedIsGold:boolean) {
  builder.addFieldInt8(9, +deprecatedIsGold, +false);
}

static addWorldCupBadge(builder:flatbuffers.Builder, worldCupBadgeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, worldCupBadgeOffset, 0);
}

static addHasSpecialNameStyle(builder:flatbuffers.Builder, hasSpecialNameStyle:boolean) {
  builder.addFieldInt8(11, +hasSpecialNameStyle, +false);
}

static addHasSpecialFrameStyle(builder:flatbuffers.Builder, hasSpecialFrameStyle:boolean) {
  builder.addFieldInt8(12, +hasSpecialFrameStyle, +false);
}

static addProfileSetting(builder:flatbuffers.Builder, profileSettingOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, profileSettingOffset, 0);
}

static endFriendScore(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
