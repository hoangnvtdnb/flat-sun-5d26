// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class EnterArcheryArenaRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EnterArcheryArenaRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsEnterArcheryArenaRequest(bb:flatbuffers.ByteBuffer, obj?:EnterArcheryArenaRequest):EnterArcheryArenaRequest {
  return (obj || new EnterArcheryArenaRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsEnterArcheryArenaRequest(bb:flatbuffers.ByteBuffer, obj?:EnterArcheryArenaRequest):EnterArcheryArenaRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new EnterArcheryArenaRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

level():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

score():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

configVersion():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startEnterArcheryArenaRequest(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addLevel(builder:flatbuffers.Builder, level:number) {
  builder.addFieldInt32(0, level, 0);
}

static addScore(builder:flatbuffers.Builder, score:number) {
  builder.addFieldInt32(1, score, 0);
}

static addConfigVersion(builder:flatbuffers.Builder, configVersion:number) {
  builder.addFieldInt32(2, configVersion, 0);
}

static endEnterArcheryArenaRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createEnterArcheryArenaRequest(builder:flatbuffers.Builder, level:number, score:number, configVersion:number):flatbuffers.Offset {
  EnterArcheryArenaRequest.startEnterArcheryArenaRequest(builder);
  EnterArcheryArenaRequest.addLevel(builder, level);
  EnterArcheryArenaRequest.addScore(builder, score);
  EnterArcheryArenaRequest.addConfigVersion(builder, configVersion);
  return EnterArcheryArenaRequest.endEnterArcheryArenaRequest(builder);
}
}
