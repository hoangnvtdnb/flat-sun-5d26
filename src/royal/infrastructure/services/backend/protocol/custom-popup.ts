// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class CustomPopup {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):CustomPopup {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsCustomPopup(bb:flatbuffers.ByteBuffer, obj?:CustomPopup):CustomPopup {
  return (obj || new CustomPopup()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsCustomPopup(bb:flatbuffers.ByteBuffer, obj?:CustomPopup):CustomPopup {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new CustomPopup()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

id():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

version():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

level():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

startDate():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

endDate():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

imageUrl():string|null
imageUrl(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
imageUrl(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

text():string|null
text(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
text(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startCustomPopup(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addId(builder:flatbuffers.Builder, id:number) {
  builder.addFieldInt32(0, id, 0);
}

static addVersion(builder:flatbuffers.Builder, version:number) {
  builder.addFieldInt32(1, version, 0);
}

static addLevel(builder:flatbuffers.Builder, level:number) {
  builder.addFieldInt32(2, level, 0);
}

static addStartDate(builder:flatbuffers.Builder, startDate:bigint) {
  builder.addFieldInt64(3, startDate, BigInt('0'));
}

static addEndDate(builder:flatbuffers.Builder, endDate:bigint) {
  builder.addFieldInt64(4, endDate, BigInt('0'));
}

static addImageUrl(builder:flatbuffers.Builder, imageUrlOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, imageUrlOffset, 0);
}

static addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, textOffset, 0);
}

static endCustomPopup(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createCustomPopup(builder:flatbuffers.Builder, id:number, version:number, level:number, startDate:bigint, endDate:bigint, imageUrlOffset:flatbuffers.Offset, textOffset:flatbuffers.Offset):flatbuffers.Offset {
  CustomPopup.startCustomPopup(builder);
  CustomPopup.addId(builder, id);
  CustomPopup.addVersion(builder, version);
  CustomPopup.addLevel(builder, level);
  CustomPopup.addStartDate(builder, startDate);
  CustomPopup.addEndDate(builder, endDate);
  CustomPopup.addImageUrl(builder, imageUrlOffset);
  CustomPopup.addText(builder, textOffset);
  return CustomPopup.endCustomPopup(builder);
}
}
