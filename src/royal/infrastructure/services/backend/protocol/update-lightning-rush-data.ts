// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class UpdateLightningRushData {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UpdateLightningRushData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUpdateLightningRushData(bb:flatbuffers.ByteBuffer, obj?:UpdateLightningRushData):UpdateLightningRushData {
  return (obj || new UpdateLightningRushData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUpdateLightningRushData(bb:flatbuffers.ByteBuffer, obj?:UpdateLightningRushData):UpdateLightningRushData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UpdateLightningRushData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

totalScore():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startUpdateLightningRushData(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addTotalScore(builder:flatbuffers.Builder, totalScore:number) {
  builder.addFieldInt32(0, totalScore, 0);
}

static endUpdateLightningRushData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUpdateLightningRushData(builder:flatbuffers.Builder, totalScore:number):flatbuffers.Offset {
  UpdateLightningRushData.startUpdateLightningRushData(builder);
  UpdateLightningRushData.addTotalScore(builder, totalScore);
  return UpdateLightningRushData.endUpdateLightningRushData(builder);
}
}
