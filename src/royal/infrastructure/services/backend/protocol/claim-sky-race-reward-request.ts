// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { CurrentUserInventory } from '../../../../../royal/infrastructure/services/backend/protocol/current-user-inventory.js';


export class ClaimSkyRaceRewardRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ClaimSkyRaceRewardRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsClaimSkyRaceRewardRequest(bb:flatbuffers.ByteBuffer, obj?:ClaimSkyRaceRewardRequest):ClaimSkyRaceRewardRequest {
  return (obj || new ClaimSkyRaceRewardRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsClaimSkyRaceRewardRequest(bb:flatbuffers.ByteBuffer, obj?:ClaimSkyRaceRewardRequest):ClaimSkyRaceRewardRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ClaimSkyRaceRewardRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

groupId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

deprecatedCurrentUserInventory(obj?:CurrentUserInventory):CurrentUserInventory|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new CurrentUserInventory()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

configVersion():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startClaimSkyRaceRewardRequest(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addGroupId(builder:flatbuffers.Builder, groupId:bigint) {
  builder.addFieldInt64(0, groupId, BigInt('0'));
}

static addDeprecatedCurrentUserInventory(builder:flatbuffers.Builder, deprecatedCurrentUserInventoryOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, deprecatedCurrentUserInventoryOffset, 0);
}

static addConfigVersion(builder:flatbuffers.Builder, configVersion:number) {
  builder.addFieldInt32(2, configVersion, 0);
}

static endClaimSkyRaceRewardRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
