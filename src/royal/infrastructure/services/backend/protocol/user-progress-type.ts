// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { UpdateAreaData } from '../../../../../royal/infrastructure/services/backend/protocol/update-area-data.js';
import { UpdateBasicData } from '../../../../../royal/infrastructure/services/backend/protocol/update-basic-data.js';
import { UpdateInventoryData } from '../../../../../royal/infrastructure/services/backend/protocol/update-inventory-data.js';
import { UpdateLeagueData } from '../../../../../royal/infrastructure/services/backend/protocol/update-league-data.js';
import { UpdateLightningRushData } from '../../../../../royal/infrastructure/services/backend/protocol/update-lightning-rush-data.js';
import { UpdateLogData } from '../../../../../royal/infrastructure/services/backend/protocol/update-log-data.js';
import { UpdateSpaceMissionData } from '../../../../../royal/infrastructure/services/backend/protocol/update-space-mission-data.js';


export enum UserProgressType {
  NONE = 0,
  UpdateAreaData = 1,
  UpdateInventoryData = 2,
  UpdateBasicData = 3,
  UpdateLeagueData = 4,
  UpdateLogData = 5,
  UpdateLightningRushData = 6,
  UpdateSpaceMissionData = 7
}

export function unionToUserProgressType(
  type: UserProgressType,
  accessor: (obj:UpdateAreaData|UpdateBasicData|UpdateInventoryData|UpdateLeagueData|UpdateLightningRushData|UpdateLogData|UpdateSpaceMissionData) => UpdateAreaData|UpdateBasicData|UpdateInventoryData|UpdateLeagueData|UpdateLightningRushData|UpdateLogData|UpdateSpaceMissionData|null
): UpdateAreaData|UpdateBasicData|UpdateInventoryData|UpdateLeagueData|UpdateLightningRushData|UpdateLogData|UpdateSpaceMissionData|null {
  switch(UserProgressType[type]) {
    case 'NONE': return null; 
    case 'UpdateAreaData': return accessor(new UpdateAreaData())! as UpdateAreaData;
    case 'UpdateInventoryData': return accessor(new UpdateInventoryData())! as UpdateInventoryData;
    case 'UpdateBasicData': return accessor(new UpdateBasicData())! as UpdateBasicData;
    case 'UpdateLeagueData': return accessor(new UpdateLeagueData())! as UpdateLeagueData;
    case 'UpdateLogData': return accessor(new UpdateLogData())! as UpdateLogData;
    case 'UpdateLightningRushData': return accessor(new UpdateLightningRushData())! as UpdateLightningRushData;
    case 'UpdateSpaceMissionData': return accessor(new UpdateSpaceMissionData())! as UpdateSpaceMissionData;
    default: return null;
  }
}

export function unionListToUserProgressType(
  type: UserProgressType, 
  accessor: (index: number, obj:UpdateAreaData|UpdateBasicData|UpdateInventoryData|UpdateLeagueData|UpdateLightningRushData|UpdateLogData|UpdateSpaceMissionData) => UpdateAreaData|UpdateBasicData|UpdateInventoryData|UpdateLeagueData|UpdateLightningRushData|UpdateLogData|UpdateSpaceMissionData|null, 
  index: number
): UpdateAreaData|UpdateBasicData|UpdateInventoryData|UpdateLeagueData|UpdateLightningRushData|UpdateLogData|UpdateSpaceMissionData|null {
  switch(UserProgressType[type]) {
    case 'NONE': return null; 
    case 'UpdateAreaData': return accessor(index, new UpdateAreaData())! as UpdateAreaData;
    case 'UpdateInventoryData': return accessor(index, new UpdateInventoryData())! as UpdateInventoryData;
    case 'UpdateBasicData': return accessor(index, new UpdateBasicData())! as UpdateBasicData;
    case 'UpdateLeagueData': return accessor(index, new UpdateLeagueData())! as UpdateLeagueData;
    case 'UpdateLogData': return accessor(index, new UpdateLogData())! as UpdateLogData;
    case 'UpdateLightningRushData': return accessor(index, new UpdateLightningRushData())! as UpdateLightningRushData;
    case 'UpdateSpaceMissionData': return accessor(index, new UpdateSpaceMissionData())! as UpdateSpaceMissionData;
    default: return null;
  }
}
