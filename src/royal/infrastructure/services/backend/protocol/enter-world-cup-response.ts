// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { EnterWorldCupResult } from '../../../../../royal/infrastructure/services/backend/protocol/enter-world-cup-result.js';
import { ResponseStatusCode } from '../../../../../royal/infrastructure/services/backend/protocol/response-status-code.js';
import { WorldCupInfo } from '../../../../../royal/infrastructure/services/backend/protocol/world-cup-info.js';


export class EnterWorldCupResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EnterWorldCupResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsEnterWorldCupResponse(bb:flatbuffers.ByteBuffer, obj?:EnterWorldCupResponse):EnterWorldCupResponse {
  return (obj || new EnterWorldCupResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsEnterWorldCupResponse(bb:flatbuffers.ByteBuffer, obj?:EnterWorldCupResponse):EnterWorldCupResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new EnterWorldCupResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

status():ResponseStatusCode {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : ResponseStatusCode.Success;
}

result():EnterWorldCupResult {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : EnterWorldCupResult.Success;
}

worldCupServerEventInfo(obj?:WorldCupInfo):WorldCupInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new WorldCupInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startEnterWorldCupResponse(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addStatus(builder:flatbuffers.Builder, status:ResponseStatusCode) {
  builder.addFieldInt8(0, status, ResponseStatusCode.Success);
}

static addResult(builder:flatbuffers.Builder, result:EnterWorldCupResult) {
  builder.addFieldInt8(1, result, EnterWorldCupResult.Success);
}

static addWorldCupServerEventInfo(builder:flatbuffers.Builder, worldCupServerEventInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, worldCupServerEventInfoOffset, 0);
}

static endEnterWorldCupResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
