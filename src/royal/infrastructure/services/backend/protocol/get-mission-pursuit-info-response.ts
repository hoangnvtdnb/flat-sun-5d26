// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { MissionPursuitInfo } from '../../../../../royal/infrastructure/services/backend/protocol/mission-pursuit-info.js';


export class GetMissionPursuitInfoResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetMissionPursuitInfoResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetMissionPursuitInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetMissionPursuitInfoResponse):GetMissionPursuitInfoResponse {
  return (obj || new GetMissionPursuitInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetMissionPursuitInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetMissionPursuitInfoResponse):GetMissionPursuitInfoResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetMissionPursuitInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

eventInfo(obj?:MissionPursuitInfo):MissionPursuitInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new MissionPursuitInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startGetMissionPursuitInfoResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addEventInfo(builder:flatbuffers.Builder, eventInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, eventInfoOffset, 0);
}

static endGetMissionPursuitInfoResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetMissionPursuitInfoResponse(builder:flatbuffers.Builder, eventInfoOffset:flatbuffers.Offset):flatbuffers.Offset {
  GetMissionPursuitInfoResponse.startGetMissionPursuitInfoResponse(builder);
  GetMissionPursuitInfoResponse.addEventInfo(builder, eventInfoOffset);
  return GetMissionPursuitInfoResponse.endGetMissionPursuitInfoResponse(builder);
}
}
