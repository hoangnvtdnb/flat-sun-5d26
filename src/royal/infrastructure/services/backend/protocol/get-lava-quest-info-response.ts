// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { LavaQuestUserGroupInfo } from '../../../../../royal/infrastructure/services/backend/protocol/lava-quest-user-group-info.js';


export class GetLavaQuestInfoResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetLavaQuestInfoResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetLavaQuestInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetLavaQuestInfoResponse):GetLavaQuestInfoResponse {
  return (obj || new GetLavaQuestInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetLavaQuestInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetLavaQuestInfoResponse):GetLavaQuestInfoResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetLavaQuestInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

lavaQuestUserGroupInfo(obj?:LavaQuestUserGroupInfo):LavaQuestUserGroupInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new LavaQuestUserGroupInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

config():string|null
config(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
config(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startGetLavaQuestInfoResponse(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addLavaQuestUserGroupInfo(builder:flatbuffers.Builder, lavaQuestUserGroupInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, lavaQuestUserGroupInfoOffset, 0);
}

static addConfig(builder:flatbuffers.Builder, configOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, configOffset, 0);
}

static endGetLavaQuestInfoResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetLavaQuestInfoResponse(builder:flatbuffers.Builder, lavaQuestUserGroupInfoOffset:flatbuffers.Offset, configOffset:flatbuffers.Offset):flatbuffers.Offset {
  GetLavaQuestInfoResponse.startGetLavaQuestInfoResponse(builder);
  GetLavaQuestInfoResponse.addLavaQuestUserGroupInfo(builder, lavaQuestUserGroupInfoOffset);
  GetLavaQuestInfoResponse.addConfig(builder, configOffset);
  return GetLavaQuestInfoResponse.endGetLavaQuestInfoResponse(builder);
}
}
