// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class EnterLeagueRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):EnterLeagueRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsEnterLeagueRequest(bb:flatbuffers.ByteBuffer, obj?:EnterLeagueRequest):EnterLeagueRequest {
  return (obj || new EnterLeagueRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsEnterLeagueRequest(bb:flatbuffers.ByteBuffer, obj?:EnterLeagueRequest):EnterLeagueRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new EnterLeagueRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

language():string|null
language(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
language(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

deviceLanguage():string|null
deviceLanguage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
deviceLanguage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startEnterLeagueRequest(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
}

static addLanguage(builder:flatbuffers.Builder, languageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, languageOffset, 0);
}

static addDeviceLanguage(builder:flatbuffers.Builder, deviceLanguageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, deviceLanguageOffset, 0);
}

static endEnterLeagueRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createEnterLeagueRequest(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset, languageOffset:flatbuffers.Offset, deviceLanguageOffset:flatbuffers.Offset):flatbuffers.Offset {
  EnterLeagueRequest.startEnterLeagueRequest(builder);
  EnterLeagueRequest.addName(builder, nameOffset);
  EnterLeagueRequest.addLanguage(builder, languageOffset);
  EnterLeagueRequest.addDeviceLanguage(builder, deviceLanguageOffset);
  return EnterLeagueRequest.endEnterLeagueRequest(builder);
}
}
