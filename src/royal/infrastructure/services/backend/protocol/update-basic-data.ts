// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class UpdateBasicData {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UpdateBasicData {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUpdateBasicData(bb:flatbuffers.ByteBuffer, obj?:UpdateBasicData):UpdateBasicData {
  return (obj || new UpdateBasicData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUpdateBasicData(bb:flatbuffers.ByteBuffer, obj?:UpdateBasicData):UpdateBasicData {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UpdateBasicData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

level():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

fullLivesTimeInMs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

unlimitedLivesEndTimeInMs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

userData():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startUpdateBasicData(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addLevel(builder:flatbuffers.Builder, level:number) {
  builder.addFieldInt32(0, level, 0);
}

static addFullLivesTimeInMs(builder:flatbuffers.Builder, fullLivesTimeInMs:bigint) {
  builder.addFieldInt64(1, fullLivesTimeInMs, BigInt('0'));
}

static addUnlimitedLivesEndTimeInMs(builder:flatbuffers.Builder, unlimitedLivesEndTimeInMs:bigint) {
  builder.addFieldInt64(2, unlimitedLivesEndTimeInMs, BigInt('0'));
}

static addUserData(builder:flatbuffers.Builder, userData:bigint) {
  builder.addFieldInt64(3, userData, BigInt('0'));
}

static endUpdateBasicData(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUpdateBasicData(builder:flatbuffers.Builder, level:number, fullLivesTimeInMs:bigint, unlimitedLivesEndTimeInMs:bigint, userData:bigint):flatbuffers.Offset {
  UpdateBasicData.startUpdateBasicData(builder);
  UpdateBasicData.addLevel(builder, level);
  UpdateBasicData.addFullLivesTimeInMs(builder, fullLivesTimeInMs);
  UpdateBasicData.addUnlimitedLivesEndTimeInMs(builder, unlimitedLivesEndTimeInMs);
  UpdateBasicData.addUserData(builder, userData);
  return UpdateBasicData.endUpdateBasicData(builder);
}
}
