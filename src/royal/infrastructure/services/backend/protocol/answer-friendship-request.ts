// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class AnswerFriendshipRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AnswerFriendshipRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAnswerFriendshipRequest(bb:flatbuffers.ByteBuffer, obj?:AnswerFriendshipRequest):AnswerFriendshipRequest {
  return (obj || new AnswerFriendshipRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAnswerFriendshipRequest(bb:flatbuffers.ByteBuffer, obj?:AnswerFriendshipRequest):AnswerFriendshipRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AnswerFriendshipRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

status():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

userId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

static startAnswerFriendshipRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addStatus(builder:flatbuffers.Builder, status:boolean) {
  builder.addFieldInt8(0, +status, +false);
}

static addUserId(builder:flatbuffers.Builder, userId:bigint) {
  builder.addFieldInt64(1, userId, BigInt('0'));
}

static endAnswerFriendshipRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAnswerFriendshipRequest(builder:flatbuffers.Builder, status:boolean, userId:bigint):flatbuffers.Offset {
  AnswerFriendshipRequest.startAnswerFriendshipRequest(builder);
  AnswerFriendshipRequest.addStatus(builder, status);
  AnswerFriendshipRequest.addUserId(builder, userId);
  return AnswerFriendshipRequest.endAnswerFriendshipRequest(builder);
}
}
