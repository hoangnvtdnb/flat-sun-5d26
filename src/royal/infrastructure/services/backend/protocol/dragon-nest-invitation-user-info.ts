// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { CoopEventInvitationStatus } from '../../../../../royal/infrastructure/services/backend/protocol/coop-event-invitation-status.js';
import { DragonNestUser } from '../../../../../royal/infrastructure/services/backend/protocol/dragon-nest-user.js';


export class DragonNestInvitationUserInfo {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DragonNestInvitationUserInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDragonNestInvitationUserInfo(bb:flatbuffers.ByteBuffer, obj?:DragonNestInvitationUserInfo):DragonNestInvitationUserInfo {
  return (obj || new DragonNestInvitationUserInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDragonNestInvitationUserInfo(bb:flatbuffers.ByteBuffer, obj?:DragonNestInvitationUserInfo):DragonNestInvitationUserInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DragonNestInvitationUserInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

profileData(obj?:DragonNestUser):DragonNestUser|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DragonNestUser()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

invitationStatus():CoopEventInvitationStatus {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : CoopEventInvitationStatus.Requested;
}

static startDragonNestInvitationUserInfo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addProfileData(builder:flatbuffers.Builder, profileDataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, profileDataOffset, 0);
}

static addInvitationStatus(builder:flatbuffers.Builder, invitationStatus:CoopEventInvitationStatus) {
  builder.addFieldInt8(1, invitationStatus, CoopEventInvitationStatus.Requested);
}

static endDragonNestInvitationUserInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDragonNestInvitationUserInfo(builder:flatbuffers.Builder, profileDataOffset:flatbuffers.Offset, invitationStatus:CoopEventInvitationStatus):flatbuffers.Offset {
  DragonNestInvitationUserInfo.startDragonNestInvitationUserInfo(builder);
  DragonNestInvitationUserInfo.addProfileData(builder, profileDataOffset);
  DragonNestInvitationUserInfo.addInvitationStatus(builder, invitationStatus);
  return DragonNestInvitationUserInfo.endDragonNestInvitationUserInfo(builder);
}
}
