// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { CoopEventInvitationOperationStatus } from '../../../../../royal/infrastructure/services/backend/protocol/coop-event-invitation-operation-status.js';


export class SendDragonNestTeamInviteResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SendDragonNestTeamInviteResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSendDragonNestTeamInviteResponse(bb:flatbuffers.ByteBuffer, obj?:SendDragonNestTeamInviteResponse):SendDragonNestTeamInviteResponse {
  return (obj || new SendDragonNestTeamInviteResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSendDragonNestTeamInviteResponse(bb:flatbuffers.ByteBuffer, obj?:SendDragonNestTeamInviteResponse):SendDragonNestTeamInviteResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SendDragonNestTeamInviteResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

operationStatus():CoopEventInvitationOperationStatus {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : CoopEventInvitationOperationStatus.Ok;
}

static startSendDragonNestTeamInviteResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addOperationStatus(builder:flatbuffers.Builder, operationStatus:CoopEventInvitationOperationStatus) {
  builder.addFieldInt8(0, operationStatus, CoopEventInvitationOperationStatus.Ok);
}

static endSendDragonNestTeamInviteResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSendDragonNestTeamInviteResponse(builder:flatbuffers.Builder, operationStatus:CoopEventInvitationOperationStatus):flatbuffers.Offset {
  SendDragonNestTeamInviteResponse.startSendDragonNestTeamInviteResponse(builder);
  SendDragonNestTeamInviteResponse.addOperationStatus(builder, operationStatus);
  return SendDragonNestTeamInviteResponse.endSendDragonNestTeamInviteResponse(builder);
}
}
