// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class UpdateArcheryArenaScoreRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UpdateArcheryArenaScoreRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUpdateArcheryArenaScoreRequest(bb:flatbuffers.ByteBuffer, obj?:UpdateArcheryArenaScoreRequest):UpdateArcheryArenaScoreRequest {
  return (obj || new UpdateArcheryArenaScoreRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUpdateArcheryArenaScoreRequest(bb:flatbuffers.ByteBuffer, obj?:UpdateArcheryArenaScoreRequest):UpdateArcheryArenaScoreRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UpdateArcheryArenaScoreRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

groupId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

score():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

rank():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

groupCount():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : 0;
}

static startUpdateArcheryArenaScoreRequest(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addGroupId(builder:flatbuffers.Builder, groupId:bigint) {
  builder.addFieldInt64(0, groupId, BigInt('0'));
}

static addScore(builder:flatbuffers.Builder, score:number) {
  builder.addFieldInt32(1, score, 0);
}

static addRank(builder:flatbuffers.Builder, rank:number) {
  builder.addFieldInt32(2, rank, 0);
}

static addGroupCount(builder:flatbuffers.Builder, groupCount:number) {
  builder.addFieldInt8(3, groupCount, 0);
}

static endUpdateArcheryArenaScoreRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createUpdateArcheryArenaScoreRequest(builder:flatbuffers.Builder, groupId:bigint, score:number, rank:number, groupCount:number):flatbuffers.Offset {
  UpdateArcheryArenaScoreRequest.startUpdateArcheryArenaScoreRequest(builder);
  UpdateArcheryArenaScoreRequest.addGroupId(builder, groupId);
  UpdateArcheryArenaScoreRequest.addScore(builder, score);
  UpdateArcheryArenaScoreRequest.addRank(builder, rank);
  UpdateArcheryArenaScoreRequest.addGroupCount(builder, groupCount);
  return UpdateArcheryArenaScoreRequest.endUpdateArcheryArenaScoreRequest(builder);
}
}
