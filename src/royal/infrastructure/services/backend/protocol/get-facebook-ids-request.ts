// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class GetFacebookIdsRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetFacebookIdsRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetFacebookIdsRequest(bb:flatbuffers.ByteBuffer, obj?:GetFacebookIdsRequest):GetFacebookIdsRequest {
  return (obj || new GetFacebookIdsRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetFacebookIdsRequest(bb:flatbuffers.ByteBuffer, obj?:GetFacebookIdsRequest):GetFacebookIdsRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetFacebookIdsRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

version():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

isNew():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startGetFacebookIdsRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addVersion(builder:flatbuffers.Builder, version:number) {
  builder.addFieldInt32(0, version, 0);
}

static addIsNew(builder:flatbuffers.Builder, isNew:boolean) {
  builder.addFieldInt8(1, +isNew, +false);
}

static endGetFacebookIdsRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetFacebookIdsRequest(builder:flatbuffers.Builder, version:number, isNew:boolean):flatbuffers.Offset {
  GetFacebookIdsRequest.startGetFacebookIdsRequest(builder);
  GetFacebookIdsRequest.addVersion(builder, version);
  GetFacebookIdsRequest.addIsNew(builder, isNew);
  return GetFacebookIdsRequest.endGetFacebookIdsRequest(builder);
}
}
