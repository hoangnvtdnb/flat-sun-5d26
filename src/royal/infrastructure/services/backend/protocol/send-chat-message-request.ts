// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ChatProfile } from '../../../../../royal/infrastructure/services/backend/protocol/chat-profile.js';
import { SpecialChatProfile } from '../../../../../royal/infrastructure/services/backend/protocol/special-chat-profile.js';


export class SendChatMessageRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SendChatMessageRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSendChatMessageRequest(bb:flatbuffers.ByteBuffer, obj?:SendChatMessageRequest):SendChatMessageRequest {
  return (obj || new SendChatMessageRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSendChatMessageRequest(bb:flatbuffers.ByteBuffer, obj?:SendChatMessageRequest):SendChatMessageRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SendChatMessageRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

text():string|null
text(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
text(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

language():string|null
language(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
language(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ownerChatProfile(obj?:ChatProfile):ChatProfile|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new ChatProfile()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

deviceLanguage():string|null
deviceLanguage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
deviceLanguage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ownerSpecialChatProfile(obj?:SpecialChatProfile):SpecialChatProfile|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new SpecialChatProfile()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startSendChatMessageRequest(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, textOffset, 0);
}

static addLanguage(builder:flatbuffers.Builder, languageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, languageOffset, 0);
}

static addOwnerChatProfile(builder:flatbuffers.Builder, ownerChatProfileOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, ownerChatProfileOffset, 0);
}

static addDeviceLanguage(builder:flatbuffers.Builder, deviceLanguageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, deviceLanguageOffset, 0);
}

static addOwnerSpecialChatProfile(builder:flatbuffers.Builder, ownerSpecialChatProfileOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, ownerSpecialChatProfileOffset, 0);
}

static endSendChatMessageRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
