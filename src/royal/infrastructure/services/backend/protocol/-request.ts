// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class __Request {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):__Request {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAs__Request(bb:flatbuffers.ByteBuffer, obj?:__Request):__Request {
  return (obj || new __Request()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAs__Request(bb:flatbuffers.ByteBuffer, obj?:__Request):__Request {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new __Request()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static start__Request(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static end__Request(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static create__Request(builder:flatbuffers.Builder):flatbuffers.Offset {
  __Request.start__Request(builder);
  return __Request.end__Request(builder);
}
}
