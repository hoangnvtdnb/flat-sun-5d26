// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class GetSeasonalCardCollectionInfoRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetSeasonalCardCollectionInfoRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetSeasonalCardCollectionInfoRequest(bb:flatbuffers.ByteBuffer, obj?:GetSeasonalCardCollectionInfoRequest):GetSeasonalCardCollectionInfoRequest {
  return (obj || new GetSeasonalCardCollectionInfoRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetSeasonalCardCollectionInfoRequest(bb:flatbuffers.ByteBuffer, obj?:GetSeasonalCardCollectionInfoRequest):GetSeasonalCardCollectionInfoRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetSeasonalCardCollectionInfoRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

eventId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

configVersion():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startGetSeasonalCardCollectionInfoRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addEventId(builder:flatbuffers.Builder, eventId:number) {
  builder.addFieldInt32(0, eventId, 0);
}

static addConfigVersion(builder:flatbuffers.Builder, configVersion:number) {
  builder.addFieldInt32(1, configVersion, 0);
}

static endGetSeasonalCardCollectionInfoRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetSeasonalCardCollectionInfoRequest(builder:flatbuffers.Builder, eventId:number, configVersion:number):flatbuffers.Offset {
  GetSeasonalCardCollectionInfoRequest.startGetSeasonalCardCollectionInfoRequest(builder);
  GetSeasonalCardCollectionInfoRequest.addEventId(builder, eventId);
  GetSeasonalCardCollectionInfoRequest.addConfigVersion(builder, configVersion);
  return GetSeasonalCardCollectionInfoRequest.endGetSeasonalCardCollectionInfoRequest(builder);
}
}
