// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { BalloonRiseUserConfigInfo } from '../../../../../royal/infrastructure/services/backend/protocol/balloon-rise-user-config-info.js';


export class GetBalloonRiseInfoResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetBalloonRiseInfoResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetBalloonRiseInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetBalloonRiseInfoResponse):GetBalloonRiseInfoResponse {
  return (obj || new GetBalloonRiseInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetBalloonRiseInfoResponse(bb:flatbuffers.ByteBuffer, obj?:GetBalloonRiseInfoResponse):GetBalloonRiseInfoResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetBalloonRiseInfoResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

balloonRiseUserInfo(obj?:BalloonRiseUserConfigInfo):BalloonRiseUserConfigInfo|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new BalloonRiseUserConfigInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startGetBalloonRiseInfoResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addBalloonRiseUserInfo(builder:flatbuffers.Builder, balloonRiseUserInfoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, balloonRiseUserInfoOffset, 0);
}

static endGetBalloonRiseInfoResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetBalloonRiseInfoResponse(builder:flatbuffers.Builder, balloonRiseUserInfoOffset:flatbuffers.Offset):flatbuffers.Offset {
  GetBalloonRiseInfoResponse.startGetBalloonRiseInfoResponse(builder);
  GetBalloonRiseInfoResponse.addBalloonRiseUserInfo(builder, balloonRiseUserInfoOffset);
  return GetBalloonRiseInfoResponse.endGetBalloonRiseInfoResponse(builder);
}
}
